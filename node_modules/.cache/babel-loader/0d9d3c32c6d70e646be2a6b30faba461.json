{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Project\\\\FE\\\\src\\\\components\\\\pages\\\\mainpages\\\\buy\\\\Buy.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport logo from '../../../../images/logo.png';\nimport './Buy.css';\nimport { useMetaMask } from 'metamask-react';\nimport { ethers } from 'ethers';\nimport ErrorMessage from './ErrorMessage';\nimport TxList from './TxList';\nimport Swal from 'sweetalert2';\nimport SlideHome from '../../../slideshow/SlideHome';\n\nconst startPayment = async _ref => {\n  let {\n    setError,\n    setTxs,\n    ether,\n    addr\n  } = _ref;\n\n  try {\n    if (!window.ethereum) throw new Error('No crypto wallet found. Please install it.');\n    await window.ethereum.send('eth_requestAccounts');\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    ethers.utils.getAddress(addr);\n    const tx = await signer.sendTransaction({\n      to: addr,\n      value: ethers.utils.parseEther(ether)\n    });\n    Swal.fire('Success!', 'Thank you!', 'success').then(function () {\n      window.location.reload();\n    });\n    console.log({\n      ether,\n      addr\n    });\n    console.log({\n      addr\n    });\n    console.log(tx);\n    setTxs([tx]);\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nconst Buy = () => {\n  const [error, setError] = useState();\n  const [txs, setTxs] = useState([]);\n  const {\n    status,\n    connect,\n    account\n  } = useMetaMask();\n  const [count, setCount] = useState('1');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setError();\n    await startPayment({\n      setError,\n      setTxs,\n      from: data.get('from'),\n      ether: data.get('ether'),\n      addr: data.get('addr')\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buy-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"\",\n    width: \"100px\",\n    height: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Buy YGO Token\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    width: \"10px\",\n    className: \"connect\",\n    onClick: connect,\n    value: status === 'connected' ? 'WELLCOME TO YGO' : 'CONNECT',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col_half\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, \"Your Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"from\",\n    placeholder: \"from Address\",\n    value: account,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col_half\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"ether\",\n    placeholder: \"Amount in ETH\",\n    required: true,\n    onChange: () => setCount(count * 100000),\n    min: \"0.1\",\n    max: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col_hall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addr\",\n    value: \"0x1c7ea8562336494788a89a4f3e49c1717c57010b\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TxList, {\n    txs: txs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Pay now\"))))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"You clicked \", count, \" times\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Click me\"))));\n};\n\nexport default Buy;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Project/FE/src/components/pages/mainpages/buy/Buy.js"],"names":["React","useState","logo","useMetaMask","ethers","ErrorMessage","TxList","Swal","SlideHome","startPayment","setError","setTxs","ether","addr","window","ethereum","Error","send","provider","providers","Web3Provider","signer","getSigner","utils","getAddress","tx","sendTransaction","to","value","parseEther","fire","then","location","reload","console","log","err","message","Buy","error","txs","status","connect","account","count","setCount","handleSubmit","e","preventDefault","data","FormData","target","from","get","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport logo from '../../../../images/logo.png'\r\nimport './Buy.css'\r\nimport { useMetaMask } from 'metamask-react';\r\nimport { ethers } from 'ethers';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport TxList from './TxList';\r\nimport Swal from 'sweetalert2';\r\nimport SlideHome from '../../../slideshow/SlideHome';\r\n\r\n\r\nconst startPayment = async ({ setError, setTxs, ether, addr }) => {\r\n    try {\r\n        if (!window.ethereum)\r\n            throw new Error('No crypto wallet found. Please install it.');\r\n\r\n        await window.ethereum.send('eth_requestAccounts');\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        ethers.utils.getAddress(addr);\r\n        const tx = await signer.sendTransaction({\r\n\r\n            to: addr,\r\n            value: ethers.utils.parseEther(ether),\r\n        });\r\n        Swal.fire(\r\n            'Success!',\r\n            'Thank you!',\r\n            'success').then(function () {\r\n                window.location.reload();\r\n            });\r\n        console.log({ ether, addr });\r\n        console.log({ addr });\r\n        console.log(tx);\r\n        setTxs([tx]);\r\n    } catch (err) {\r\n        setError(err.message);\r\n    }\r\n};\r\n\r\n\r\nconst Buy = () => {\r\n    const [error, setError] = useState();\r\n    const [txs, setTxs] = useState([]);\r\n    const { status, connect, account } = useMetaMask();\r\n\r\n    const [count, setCount] = useState('1');\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        setError();\r\n        await startPayment({\r\n            setError,\r\n            setTxs,\r\n            from: data.get('from'),\r\n            ether: data.get('ether'),\r\n            addr: data.get('addr'),\r\n        });\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='buy-logo'>\r\n                <img src={logo} alt=\"\" width=\"100px\" height=\"100px\" />\r\n            </div>\r\n            <div className='buy'>\r\n                <>\r\n                    <div className=\"form_wrapper\">\r\n                        <div className=\"form_container\">\r\n                            <div className=\"title_container\">\r\n                                <h2>Buy YGO Token</h2>\r\n                                <input type=\"submit\" width=\"10px\" className='connect' onClick={connect} value={status === 'connected' ? 'WELLCOME TO YGO' : 'CONNECT'} />\r\n                            </div>\r\n                            <form onSubmit={handleSubmit} >\r\n                                <div className=\"row clearfix\">\r\n                                    <div className=\"col_half\">\r\n                                        <label>Your Address</label>\r\n                                        <div className=\"input_field\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name='from'\r\n                                                placeholder='from Address'\r\n                                                value={account}\r\n                                                readOnly\r\n\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col_half\">\r\n                                        <label>Amount</label>\r\n                                        <div className=\"input_field\">\r\n                                            <input\r\n\r\n                                                type=\"number\"\r\n                                                name='ether'\r\n                                                placeholder='Amount in ETH'\r\n                                                required\r\n                                                onChange={() => setCount(count * 100000)}\r\n                                                min=\"0.1\"\r\n                                                max=\"1\"\r\n\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col_hall\">\r\n                                        <div className=\"input_field\">\r\n                                            <input type=\"text\"\r\n                                                name='addr'\r\n                                                value='0x1c7ea8562336494788a89a4f3e49c1717c57010b' style={{ display: 'none' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"input_field\" >\r\n                                    abc:  { }\r\n                                </div> */}\r\n                                {/* <SlideHome /> */}\r\n                                <div className=\"input_field\" >\r\n                                    <ErrorMessage message={error} />\r\n                                </div>\r\n                                <div className=\"success\" >\r\n                                    <TxList txs={txs} />\r\n                                </div>\r\n\r\n                                <div className='btn-button'>\r\n                                    <button className=\"button\"\r\n                                        type='submit'>\r\n                                        Pay now\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <p>You clicked {count} times</p>\r\n                    <button onClick={() => setCount(count + 1)}>\r\n                        Click me\r\n                    </button>\r\n                </>\r\n\r\n            </div>\r\n\r\n\r\n            {/* <div>\r\n                <form className='m-4' onSubmit={handleSubmit}>\r\n                    <div className='credit-card w-full lg:w-1/2 sm:w-auto shadow-lg mx-auto rounded-xl bg-white'>\r\n                        <main className='mt-4 p-4'>\r\n\r\n                            <div className=''>\r\n                                <div className='my-3'>\r\n                                    <input\r\n                                        type='text'\r\n                                        name='from'\r\n                                        className='input input-bordered block w-full focus:ring focus:outline-none'\r\n                                        placeholder='from Address'\r\n                                        value={account}\r\n                                        readOnly\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className='my-3'>\r\n                                    <input\r\n                                        type='text'\r\n                                        name='addr'\r\n                                        className='input input-bordered block w-full focus:ring focus:outline-none'\r\n                                        placeholder='Recipient Address'\r\n                                        value='0x1c7ea8562336494788a89a4f3e49c1717c57010b'\r\n                                        style={{ display: 'none' }}\r\n                                    />\r\n                                </div>\r\n                                <div className='my-3'>\r\n                                    <input\r\n                                        name='ether'\r\n                                        type='text'\r\n                                        className='input input-bordered block w-full focus:ring focus:outline-none'\r\n                                        placeholder='Amount in ETH'\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                        <footer className='p-4'>\r\n                            <button\r\n                                onsubmit=\"setTimeout(function(){window.location.reload();},10);\"\r\n                                type='submit'\r\n                                className='btn btn-primary submit-button focus:ring focus:outline-none w-full'\r\n                            >\r\n                                Pay now\r\n                            </button>\r\n                            <ErrorMessage message={error} />\r\n                            <TxList txs={txs} />\r\n                        </footer>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Buy;\r\n"]},"metadata":{},"sourceType":"module"}